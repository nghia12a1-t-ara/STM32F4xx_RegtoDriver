
#include "DMA.h"
#include "stm32f4xx.h"

void DMA_Init(void)
{
	// 1. Enable DMA1 Clock
	DMA1_PCLK_EN();

	// 2. Enable DMA Interrupts
	DMA1->Stream[0].CR |= (1 << 2) | (1 << 3) | (1 << 4);

	// 3. Set the Data Direction
	   // Read From Memory
	   // Read From Peripheral
	DMA1->Stream[0].CR |= (1 << 7);
	DMA1->Stream[0].CR &= ~(1 << 6);
	
	// 4. Enable the circular mode (CIRC)
	DMA1->Stream[0].CR |= (1 << 8);

	// 5. Enable the Memory Increment (MINC)
	DMA1->Stream[0].CR |= (1 << 10);

	// 6. Set the Memory/Peripheral data size (PSIZE) - 8 bit for Mem/Per
	DMA1->Stream[0].CR &= ~(0xF << 11);

	// 8. Set the Priority Level
	DMA1->Stream[0].CR &= ~(0x3 << 16);
}

void DMA_Config (uint32_t srcAdd, uint32_t destAdd, uint16_t datasize)
{

	// 1. Set the data size in NDTR Register
	DMA1->Stream[0].NDTR = datasize;

	// 2. Set the  peripheral address in PAR Register
	DMA1->Stream[0].M0AR = srcAdd;

	// 3. Set the  Memory address in MAR Register
	DMA1->Stream[0].M1AR = destAdd;

	// 4. Enable the DMA1
	DMA1->Stream[0].CR |= (1 << 0);
}

void DMA1_Stream0_IRQHandler (void)
{
	int a = 1;

	if ( (DMA1->LISR) & (1 << 4) )  // If the Half Transfer Complete Interrupt is set
	{
		a = 2;
	}

	if ( (DMA1->LISR) & (1 << 4) )  // If the Transfer Complete Interrupt is set
	{
		a = 3;
	}
}
