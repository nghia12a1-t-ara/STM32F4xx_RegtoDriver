/*
 * UART_REG.h
 *
 *  Created on: May 6, 2022
 *      Author: Admin
 */

#ifndef UART_REG_H_
#define UART_REG_H_

#include <stdint.h>

/*
 * peripheral register definition structure for USART
 */
typedef struct
{
	volatile uint32 SR;         /*!< TODO,     										Address offset: 0x00 */
	volatile uint32 DR;         /*!< TODO,     										Address offset: 0x04 */
	volatile uint32 BRR;        /*!< TODO,     										Address offset: 0x08 */
	volatile uint32 CR1;        /*!< TODO,     										Address offset: 0x0C */
	volatile uint32 CR2;        /*!< TODO,     										Address offset: 0x10 */
	volatile uint32 CR3;        /*!< TODO,     										Address offset: 0x14 */
	volatile uint32 GTPR;       /*!< TODO,     										Address offset: 0x18 */
} USART_Types;


/*
 * Base addresses of peripherals which are hanging on APB1 bus
 * TODO : Complete for all other peripherals
 */
#define UART4_BASEADDR					(APB1PERIPH_BASEADDR + 0x4C00)
#define UART4  							((USART_Types*)UART4_BASEADDR)


void USART_Init(void);
void USART_SendData(uint8 *pTxBuffer, uint32 Len);
void  USART_ReceiveData(uint8 *pRxBuffer, uint32 Len);

#endif /* UART_REG_H_ */
